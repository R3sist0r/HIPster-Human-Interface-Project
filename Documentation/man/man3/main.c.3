.TH "D:/GIT_DEV/2011_HiTech/KeyboardR/main.c" 3 "Mon Mar 28 2011" "Version 0.7" "Human Interface Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
D:/GIT_DEV/2011_HiTech/KeyboardR/main.c \- 
.PP
HIPster: Human Interface Project .:. Controlling an RGB LED with a PS/2 keyboard.  

.SH SYNOPSIS
.br
.PP
\fC#include 'define.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBinit_all\fP ()"
.br
.RI "\fIA function which initialises all required hardware. \fP"
.ti -1c
.RI "int \fBmain\fP ()"
.br
.RI "\fIThe \fBmain()\fP function of the program. \fP"
.in -1c
.SH "Detailed Description"
.PP 
HIPster: Human Interface Project .:. Controlling an RGB LED with a PS/2 keyboard. 

\fBAuthor:\fP
.RS 4
(c)2011 Reuben Posthuma
.RE
.PP
HIPster is a study on various human interface devices. A number of different interface modules have been created, and they all are designed to perform one simple task: controlling the color and intensity of an RGB LED. This provides a consistent benchmark, with the aim of finding the most natural human-device interaction method. 
.PP
Definition in file \fBmain.c\fP.
.SH "Function Documentation"
.PP 
.SS "void init_all (void)"
.PP
A function which initialises all required hardware. \fBinit_all()\fP calls further functions to set up low-level hardware. It also prints a string on the UART port to show that the system has booted correctly
.PP
Initialisation sequence:
.IP "\(bu" 2
Initialise the uart serial port
.IP "\(bu" 2
Initialise the keyboard interrupt hardware
.IP "\(bu" 2
Initialise the pwm module hardware for control of the RGB LED
.IP "\(bu" 2
Send a string through the serial port to show that the system has booted correctly
.IP "\(bu" 2
Enable global interrupts 
.PP

.PP
Definition at line 32 of file main.c.
.SS "int main (void)"
.PP
The \fBmain()\fP function of the program. Since the keyboard control of the RGB LED is entirely interrupt-driven, once the \fBinit_all()\fP routine has been called, the main routine is only an infinite loop. 
.PP
Definition at line 47 of file main.c.
.SH "Author"
.PP 
Generated automatically by Doxygen for Human Interface Project from the source code.
